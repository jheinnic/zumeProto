{
  "allowRemoteResourceManagement": false,
  "policyEnforcementMode": "ENFORCING",
  "resources": [
    {
      "name": "Protected Resource",
      "uri": "/protected/*"
    },
    {
      "name": "Premium Resource",
      "uri": "/protected/premium/*"
    },
    {
      "name": "Default Resource",
      "uri": "/*"
    },
    {
      "name": "User Resource",
      "type": "user-resource"
    },
    {
      "name": "Alice Resource",
      "uri": "/protected/alice",
      "type": "user-resource",
      "owner": {
        "name": "alice"
      },
      "typedScopes": []
    }
  ],
  "policies": [
    {
      "name": "Only Premium User Policy",
      "type": "role",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "roles": "[{\"id\":\"user-premium\",\"required\":false}]"
      }
    },
    {
      "name": "Default Policy",
      "description": "A policy that grants access only for users within this realm",
      "type": "js",
      "logic": "POSITIVE",
      "decisionStrategy": "AFFIRMATIVE",
      "config": {
        "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
      }
    },
    {
      "name": "Only Owner Policy",
      "type": "js",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "code": "var context = $evaluation.getContext();\nvar permission = $evaluation.getPermission();\nvar resource = permission.getResource();\nvar identity = context.getIdentity();\n\nif (identity.id == resource.owner) {\n    $evaluation.grant();\n}"
      }
    },
    {
      "name": "Default Resource Permission",
      "type": "resource",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "resources": "[\"Default Resource\"]",
        "applyPolicies": "[\"Default Policy\"]"
      }
    },
    {
      "name": "Default Permission",
      "description": "A permission that applies to the default resource type",
      "type": "resource",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "defaultResourceType": "urn:app-authz-springboot:resources:default",
        "applyPolicies": "[\"Default Policy\"]"
      }
    },
    {
      "name": "Premium Resource Permission",
      "type": "resource",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "resources": "[\"Premium Resource\"]",
        "applyPolicies": "[\"Only Premium User Policy\"]"
      }
    },
    {
      "name": "User Resource Permission",
      "type": "resource",
      "logic": "POSITIVE",
      "decisionStrategy": "UNANIMOUS",
      "config": {
        "defaultResourceType": "user-resource",
        "applyPolicies": "[\"Only Owner Policy\"]"
      }
    }
  ],
  "scopes": []
}