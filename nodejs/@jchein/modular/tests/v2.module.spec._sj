"use strict";
/**
 * Created by jheinnic on 4/29/17.
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
global['Reflect'] = Reflect;
var mocha_typescript_1 = require("mocha-typescript");
var inversify_1 = require("inversify");
var ModuleSpec = (function () {
    function ModuleSpec() {
    }
    ModuleSpec.before = function () {
        // Before the describe block.
        console.log("Foo");
    };
    ModuleSpec.prototype.before = function (done) {
        // refresh container and container
        this.container = new inversify_1.Container();
        console.log("Bar");
        done();
    };
    // @describe("Routing & Request Handling:")
    // class
    // Routing {
    ModuleSpec.prototype.method1 = function (done) {
        // @injectable()
        // class TestController {
        //     public getTest() {
        //         return new Promise(((resolve) => {
        //             setTimeout(resolve, 100, "GET");
        //         }));
        //     }
        // }
        // container.bind<interfaces.Controller>(TYPE.Controller).to(TestController).whenTargetNamed("TestController");
        //
        // server = new InversifyExpressServer(container);
        // request(server.build())
        //     .get("/")
        //     .expect(200, "GET", done);
        done();
    };
    ModuleSpec.prototype.method2 = function (done) {
        // @injectable()
        // class TestControllerTwo {
        //     public getTest() {
        //         return new Promise(((resolve, reject) => {
        //             setTimeout(reject, 100, "GET");
        //         }));
        //     }
        // }
        done("fail");
    };
    return ModuleSpec;
}());
__decorate([
    mocha_typescript_1.context
], ModuleSpec.prototype, "context", void 0);
__decorate([
    mocha_typescript_1.it("should work for async controller methods")
], ModuleSpec.prototype, "method1", null);
__decorate([
    mocha_typescript_1.test("should work for async controller methods that fails")
], ModuleSpec.prototype, "method2", null);
ModuleSpec = __decorate([
    mocha_typescript_1.describe("DIRegistry Module tests:", mocha_typescript_1.slow(1500), mocha_typescript_1.timeout(3000))
], ModuleSpec);
